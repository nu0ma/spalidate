name: Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
    
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Download dependencies
      run: go mod download
    
    - name: Run unit tests
      run: go test -v ./internal/...
    
    - name: Build application
      run: go build -v ./...

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
    
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Download dependencies
      run: go mod download
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Start Spanner Emulator
      run: |
        cd testdata
        docker compose up -d
        echo "Waiting for Spanner emulator to be ready..."
        timeout 300 bash -c 'until nc -z localhost 9010; do sleep 1; done'
    
    - name: Set up test environment
      run: |
        export SPANNER_EMULATOR_HOST=localhost:9010
        # Wait a bit more for emulator to be fully ready
        sleep 5
        
        # Create instance and database using gcloud CLI in container
        docker exec spanner-emulator gcloud config set auth/disable_credentials true
        docker exec spanner-emulator gcloud config set project test-project
        docker exec spanner-emulator gcloud config set api_endpoint_overrides/spanner http://localhost:9010/
        docker exec spanner-emulator gcloud spanner instances create test-instance --config=emulator-config --description="Test Instance" --nodes=1
        docker exec spanner-emulator gcloud spanner databases create test-database --instance=test-instance --project=test-project
        
        # Load schema
        docker exec -i spanner-emulator gcloud spanner databases ddl update test-database --instance=test-instance --project=test-project --ddl-file=/dev/stdin < testdata/schema.sql
        
        # Load test data
        docker exec -i spanner-emulator gcloud spanner databases execute-sql test-database --instance=test-instance --project=test-project --sql="$(cat testdata/seed.sql)"
    
    - name: Run integration tests
      run: |
        export SPANNER_EMULATOR_HOST=localhost:9010
        go test -v -tags=integration ./integration_test.go
    
    - name: Cleanup
      if: always()
      run: |
        cd testdata
        docker compose down -v