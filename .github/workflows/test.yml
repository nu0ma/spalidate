name: Test

# Development quality assurance workflow
# Runs on PR creation and branch pushes
# For releases, see release-please.yml

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'
    
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Download dependencies
      run: go mod download
    
    - name: Verify dependencies
      run: go mod verify
    
    - name: Run gofmt
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "Code is not formatted:"
          gofmt -s -l .
          exit 1
        fi
    
    - name: Run go vet
      run: go vet ./...
    
    - name: Install staticcheck
      run: go install honnef.co/go/tools/cmd/staticcheck@latest
    
    - name: Run staticcheck
      run: staticcheck ./...
    
    - name: Run unit tests
      run: go test -v -race -coverprofile=coverage.out ./internal/...
    
    - name: Build binary
      run: go build -v -o spalidate .
    
    - name: Test go install
      run: |
        go install .
        spalidate --version

  integration:
    runs-on: ubuntu-latest
    needs: test
    
    services:
      spanner:
        image: gcr.io/cloud-spanner-emulator/emulator:latest
        ports:
          - 9010:9010
          - 9020:9020
        options: >-
          --health-cmd "curl -f http://localhost:9020/ || exit 1"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 10
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'
    
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Download dependencies
      run: go mod download
    
    - name: Build binary
      run: go build -v -o spalidate .
    
    - name: Test help command
      run: ./spalidate --help || true
    
    - name: Test version command
      run: ./spalidate --version
    
    - name: Wait for Spanner emulator
      run: |
        for i in {1..30}; do
          if curl -f http://localhost:9020/ > /dev/null 2>&1; then
            echo "Spanner emulator is ready!"
            break
          fi
          echo "Waiting for Spanner emulator... ($i/30)"
          sleep 2
        done
    
    - name: Run integration tests
      env:
        SPANNER_EMULATOR_HOST: localhost:9010
        GOOGLE_CLOUD_PROJECT: test-project
      run: go test -v -race -tags=integration ./integration/...